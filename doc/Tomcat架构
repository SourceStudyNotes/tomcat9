Servlet 应用


Catalina（Servlet容器实现）--- 通过Connector与用户交互，通过Adapter与Coyote交互。


Coyote（底层协议相关实现，http11,ajp）每个协议都实现ProtocolHandler接口



启动顺序：Catalina.start->StandardServer->StandardService->StandardEngine->StandardHost->StandardContext->WebappLoader->StandardWrapper
初始化顺序（initInternal）：StandardServer->StandardService->StandardEngine->StandardHost->StandardContext->StandardWrapper



org.apache.coyote.Processor(Common interface for processors of all protocols.)有状态的对象，和每个连接绑定的，生命周期是一个请求/响应。
org.apache.tomcat.util.net.Handler 无状态，和EndPoint绑定。


Server(A Server element represents the entire Catalina servlet container.)

Service(A Service is a group of one or more Connectors that share a single Container to process their incoming requests.) 一个Service只能有一个Container

------------Container start------------

Engine(Catalina servlet engine)

Host(Virtual host in the Catalina servlet engine)

Context(individual web application)

Wrapper(individual servlet definition)

-------------Container end-------------


请求数据的处理：
org.apache.coyote.http11.AbstractHttp11Processor.prepareRequest
    根据消息头，建立起必要的数据处理链。

    RequestBody流式获取的时候InputFilter来根据Content-Length和transfer-encoding: chunked决定消息结束标识符，通过返回-1表示一个消息的结束。

    OutputFilter处理分块传输和Gzip压缩传输等。



异步处理:
    ActionCode.DISPATCH_EXECUTE
    ActionCode.ASYNC_DISPATCH




